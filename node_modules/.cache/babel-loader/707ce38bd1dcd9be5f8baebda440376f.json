{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Thefallen123\\\\Desktop\\\\Github Desktop\\\\Projects\\\\Project-2\\\\src\\\\pages\\\\SearchPage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\"; // import { useLocation } from \"react-router-dom\";\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SearchPage = props => {\n  _s();\n\n  const [query, setQuery] = useState(\"\");\n  const [weaponsData, setWeaponsData] = useState([]);\n  useEffect(() => {\n    setQuery(props.searchData);\n    setWeaponsData(props.fullData);\n  }, [props]); // 1st Run a map through my fullData.\n  // 2nd split each element\n  // 3rd for Each Element.name, run a map and make Each Item\n  // if item === query\n  // 4th found = true\n  // if found === true, return <h1> Found! </h1>\n  // else return <h1> Not Found! </h1>\n  // const runSearch =\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [console.log(\"weaponsData: \", weaponsData), \"default\", weaponsData.map(element => {\n      const splitName = element.name.split(\" \");\n      splitName.map(item => {\n        let found = false;\n\n        if (query.toLowerCase() === item.toLowerCase()) {\n          found = true;\n          console.log(\"I found something 1111111111111111\");\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [console.log(\"true\"), /*#__PURE__*/_jsxDEV(\"h1\", {\n              children: \"ITEM FOUND!!!!!!!!!!!!!!!!!!!\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 38,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n              children: \"ITEM FOUND!!!!!!!!!!!!!!!!!!!\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n              children: \"ITEM FOUND!!!!!!!!!!!!!!!!!!!\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n              children: \"ITEM FOUND!!!!!!!!!!!!!!!!!!!\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 15\n          }, this);\n        }\n\n        if (found === false) {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              color: \"white\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n              style: {\n                color: \"white\",\n                fontFamily: \"MyFirstFont\",\n                textAlign: \"center\"\n              },\n              children: \"No such Item in Database\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 17\n            }, this), console.log(\"false\")]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 15\n          }, this);\n        }\n      });\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SearchPage, \"Zl83OLUpZ71Mz71ZFdqr20hvLak=\");\n\n_c = SearchPage;\nexport default SearchPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"SearchPage\");","map":{"version":3,"sources":["C:/Users/Thefallen123/Desktop/Github Desktop/Projects/Project-2/src/pages/SearchPage.js"],"names":["React","useEffect","useState","SearchPage","props","query","setQuery","weaponsData","setWeaponsData","searchData","fullData","console","log","map","element","splitName","name","split","item","found","toLowerCase","color","fontFamily","textAlign"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C,C,CACA;;;;AAEA,MAAMC,UAAU,GAAIC,KAAD,IAAW;AAAA;;AAC5B,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBJ,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACK,WAAD,EAAcC,cAAd,IAAgCN,QAAQ,CAAC,EAAD,CAA9C;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACdK,IAAAA,QAAQ,CAACF,KAAK,CAACK,UAAP,CAAR;AACAD,IAAAA,cAAc,CAACJ,KAAK,CAACM,QAAP,CAAd;AACD,GAHQ,EAGN,CAACN,KAAD,CAHM,CAAT,CAJ4B,CAS5B;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AAEA,sBACE;AAAA,eACGO,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6BL,WAA7B,CADH,aAGGA,WAAW,CAACM,GAAZ,CAAiBC,OAAD,IAAa;AAC5B,YAAMC,SAAS,GAAGD,OAAO,CAACE,IAAR,CAAaC,KAAb,CAAmB,GAAnB,CAAlB;AAEAF,MAAAA,SAAS,CAACF,GAAV,CAAeK,IAAD,IAAU;AACtB,YAAIC,KAAK,GAAG,KAAZ;;AACA,YAAId,KAAK,CAACe,WAAN,OAAwBF,IAAI,CAACE,WAAL,EAA5B,EAAgD;AAC9CD,UAAAA,KAAK,GAAG,IAAR;AACAR,UAAAA,OAAO,CAACC,GAAR,CAAY,oCAAZ;AACA,8BACE;AAAA,uBACGD,OAAO,CAACC,GAAR,CAAY,MAAZ,CADH,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAHF,eAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAJF,eAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBALF;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF;AASD;;AACD,YAAIO,KAAK,KAAK,KAAd,EAAqB;AACnB,8BACE;AAAK,YAAA,KAAK,EAAE;AAAEE,cAAAA,KAAK,EAAE;AAAT,aAAZ;AAAA,oCACE;AACE,cAAA,KAAK,EAAE;AACLA,gBAAAA,KAAK,EAAE,OADF;AAELC,gBAAAA,UAAU,EAAE,aAFP;AAGLC,gBAAAA,SAAS,EAAE;AAHN,eADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,EAUGZ,OAAO,CAACC,GAAR,CAAY,OAAZ,CAVH;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF;AAcD;AACF,OA/BD;AAgCD,KAnCA,CAHH;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA0CD,CA7DD;;GAAMT,U;;KAAAA,U;AA+DN,eAAeA,UAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\n// import { useLocation } from \"react-router-dom\";\r\n\r\nconst SearchPage = (props) => {\r\n  const [query, setQuery] = useState(\"\");\r\n  const [weaponsData, setWeaponsData] = useState([]);\r\n\r\n  useEffect(() => {\r\n    setQuery(props.searchData);\r\n    setWeaponsData(props.fullData);\r\n  }, [props]);\r\n\r\n  // 1st Run a map through my fullData.\r\n  // 2nd split each element\r\n  // 3rd for Each Element.name, run a map and make Each Item\r\n  // if item === query\r\n  // 4th found = true\r\n  // if found === true, return <h1> Found! </h1>\r\n  // else return <h1> Not Found! </h1>\r\n\r\n  // const runSearch =\r\n\r\n  return (\r\n    <div>\r\n      {console.log(\"weaponsData: \", weaponsData)}\r\n      default\r\n      {weaponsData.map((element) => {\r\n        const splitName = element.name.split(\" \");\r\n\r\n        splitName.map((item) => {\r\n          let found = false;\r\n          if (query.toLowerCase() === item.toLowerCase()) {\r\n            found = true;\r\n            console.log(\"I found something 1111111111111111\");\r\n            return (\r\n              <div>\r\n                {console.log(\"true\")}\r\n                <h1>ITEM FOUND!!!!!!!!!!!!!!!!!!!</h1>\r\n                <h1>ITEM FOUND!!!!!!!!!!!!!!!!!!!</h1>\r\n                <h1>ITEM FOUND!!!!!!!!!!!!!!!!!!!</h1>\r\n                <h1>ITEM FOUND!!!!!!!!!!!!!!!!!!!</h1>\r\n              </div>\r\n            );\r\n          }\r\n          if (found === false) {\r\n            return (\r\n              <div style={{ color: \"white\" }}>\r\n                <h1\r\n                  style={{\r\n                    color: \"white\",\r\n                    fontFamily: \"MyFirstFont\",\r\n                    textAlign: \"center\",\r\n                  }}\r\n                >\r\n                  No such Item in Database\r\n                </h1>\r\n                {console.log(\"false\")}\r\n              </div>\r\n            );\r\n          }\r\n        });\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearchPage;\r\n"]},"metadata":{},"sourceType":"module"}