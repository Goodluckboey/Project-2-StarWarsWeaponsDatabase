{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Thefallen123\\\\Desktop\\\\Github Desktop\\\\Projects\\\\Project-2\\\\src\\\\pages\\\\SearchPage.js\";\nimport React from \"react\"; // import { useLocation } from \"react-router-dom\";\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SearchPage = props => {\n  const query = props.searchData;\n  const weaponsData = props.fullData; // 1st Run a map through my fullData.\n\n  const runSearch = weaponsData.map(element => {\n    const splitName = element.name.split(\" \");\n    let found = false;\n    splitName.map(item => {\n      if (query === item) {\n        found = true;\n      } else {\n        return /*#__PURE__*/_jsxDEV(\"h1\", {\n          style: {\n            color: \"white\",\n            fontFamily: \"MyFirstFont\",\n            textAlign: \"center\"\n          },\n          children: \"No such Item in Database\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 11\n        }, this);\n      }\n\n      if (found === true) {\n        return;\n      }\n    });\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 10\n  }, this);\n};\n\n_c = SearchPage;\nexport default SearchPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"SearchPage\");","map":{"version":3,"sources":["C:/Users/Thefallen123/Desktop/Github Desktop/Projects/Project-2/src/pages/SearchPage.js"],"names":["React","SearchPage","props","query","searchData","weaponsData","fullData","runSearch","map","element","splitName","name","split","found","item","color","fontFamily","textAlign"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CACA;;;;AAEA,MAAMC,UAAU,GAAIC,KAAD,IAAW;AAC5B,QAAMC,KAAK,GAAGD,KAAK,CAACE,UAApB;AACA,QAAMC,WAAW,GAAGH,KAAK,CAACI,QAA1B,CAF4B,CAI5B;;AAEA,QAAMC,SAAS,GAAGF,WAAW,CAACG,GAAZ,CAAiBC,OAAD,IAAa;AAC7C,UAAMC,SAAS,GAAGD,OAAO,CAACE,IAAR,CAAaC,KAAb,CAAmB,GAAnB,CAAlB;AACA,QAAIC,KAAK,GAAG,KAAZ;AACAH,IAAAA,SAAS,CAACF,GAAV,CAAeM,IAAD,IAAU;AACtB,UAAIX,KAAK,KAAKW,IAAd,EAAoB;AAClBD,QAAAA,KAAK,GAAG,IAAR;AACD,OAFD,MAEO;AACL,4BACE;AACE,UAAA,KAAK,EAAE;AACLE,YAAAA,KAAK,EAAE,OADF;AAELC,YAAAA,UAAU,EAAE,aAFP;AAGLC,YAAAA,SAAS,EAAE;AAHN,WADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF;AAWD;;AACD,UAAIJ,KAAK,KAAK,IAAd,EAAoB;AAClB;AACD;AACF,KAnBD;AAoBD,GAvBiB,CAAlB;AAyBA,sBAAO;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,CAhCD;;KAAMZ,U;AAkCN,eAAeA,UAAf","sourcesContent":["import React from \"react\";\r\n// import { useLocation } from \"react-router-dom\";\r\n\r\nconst SearchPage = (props) => {\r\n  const query = props.searchData;\r\n  const weaponsData = props.fullData;\r\n\r\n  // 1st Run a map through my fullData.\r\n\r\n  const runSearch = weaponsData.map((element) => {\r\n    const splitName = element.name.split(\" \");\r\n    let found = false;\r\n    splitName.map((item) => {\r\n      if (query === item) {\r\n        found = true;\r\n      } else {\r\n        return (\r\n          <h1\r\n            style={{\r\n              color: \"white\",\r\n              fontFamily: \"MyFirstFont\",\r\n              textAlign: \"center\",\r\n            }}\r\n          >\r\n            No such Item in Database\r\n          </h1>\r\n        );\r\n      }\r\n      if (found === true) {\r\n        return;\r\n      }\r\n    });\r\n  });\r\n\r\n  return <div></div>;\r\n};\r\n\r\nexport default SearchPage;\r\n"]},"metadata":{},"sourceType":"module"}