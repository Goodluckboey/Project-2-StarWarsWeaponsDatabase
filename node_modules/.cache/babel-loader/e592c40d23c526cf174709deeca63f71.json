{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Thefallen123\\\\Desktop\\\\Github Desktop\\\\Projects\\\\Project-2\\\\src\\\\pages\\\\SearchPage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\"; // import { useLocation } from \"react-router-dom\";\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SearchPage = props => {\n  _s();\n\n  const [query, setQuery] = useState(\"\");\n  const [weaponsData, setWeaponsData] = useState([]);\n  useEffect(() => {\n    setQuery(props.searchData);\n    setWeaponsData(props.fullData);\n  }, [props]); // 1st Run a map through my fullData.\n  // 2nd split each element\n  // 3rd for Each Element.name, run a map and make Each Item\n  // if item === query\n  // 4th found = true\n  // if found === true, return <h1> Found! </h1>\n  // else return <h1> Not Found! </h1>\n\n  const runSearch = weaponsData.map(element => {\n    const splitName = element.name.split(\" \");\n    splitName.map(item => {\n      let found = false;\n\n      if (query.toLowerCase() === item.toLowerCase()) {\n        found = true;\n        console.log(\"I found something 1111111111111111\");\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [console.log(), /*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"ITEM FOUND!!!!!!!!!!!!!!!!!!!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"ITEM FOUND!!!!!!!!!!!!!!!!!!!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"ITEM FOUND!!!!!!!!!!!!!!!!!!!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"ITEM FOUND!!!!!!!!!!!!!!!!!!!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 11\n        }, this);\n      }\n\n      if (found === false) {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            color: \"white\"\n          },\n          children: /*#__PURE__*/_jsxDEV(\"h1\", {\n            style: {\n              color: \"white\",\n              fontFamily: \"MyFirstFont\",\n              textAlign: \"center\"\n            },\n            children: \"No such Item in Database\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this);\n      } // if (found === true) {\n      //   return (\n      //     <div className=\"individualCards\">\n      //       {console.log(\"item Found!\", query)}\n      //       <h1>{element.name}</h1>\n      //       <section className=\"image-container\">\n      //         <img className=\"card-images\" src={element.url1} alt=\"\"></img>\n      //         <img className=\"card-images\" src={element.url2} alt=\"\"></img>\n      //       </section>\n      //       <ul className=\"list\">\n      //         <li>{element.cost} Galactic Credits</li>\n      //         <li>Weight: Approximately {element.weight} kg</li>\n      //         <li style={{ fontWeight: \"bold\" }}>{element.manufacturer}</li>\n      //         <br />\n      //         <li>{element.short}</li>\n      //       </ul>\n      //       <br />\n      //       <div className=\"button-div\">\n      //         <button\n      //           className=\"purchase-button\"\n      //           onClick={() => props.addToCart(element)}\n      //         >\n      //           ADD TO CART\n      //         </button>\n      //       </div>\n      //     </div>\n      //   );\n      // }\n\n    });\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [console.log(\"weaponsData: \", weaponsData), runSearch]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SearchPage, \"Zl83OLUpZ71Mz71ZFdqr20hvLak=\");\n\n_c = SearchPage;\nexport default SearchPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"SearchPage\");","map":{"version":3,"sources":["C:/Users/Thefallen123/Desktop/Github Desktop/Projects/Project-2/src/pages/SearchPage.js"],"names":["React","useEffect","useState","SearchPage","props","query","setQuery","weaponsData","setWeaponsData","searchData","fullData","runSearch","map","element","splitName","name","split","item","found","toLowerCase","console","log","color","fontFamily","textAlign"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C,C,CACA;;;;AAEA,MAAMC,UAAU,GAAIC,KAAD,IAAW;AAAA;;AAC5B,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBJ,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACK,WAAD,EAAcC,cAAd,IAAgCN,QAAQ,CAAC,EAAD,CAA9C;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACdK,IAAAA,QAAQ,CAACF,KAAK,CAACK,UAAP,CAAR;AACAD,IAAAA,cAAc,CAACJ,KAAK,CAACM,QAAP,CAAd;AACD,GAHQ,EAGN,CAACN,KAAD,CAHM,CAAT,CAJ4B,CAS5B;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,QAAMO,SAAS,GAAGJ,WAAW,CAACK,GAAZ,CAAiBC,OAAD,IAAa;AAC7C,UAAMC,SAAS,GAAGD,OAAO,CAACE,IAAR,CAAaC,KAAb,CAAmB,GAAnB,CAAlB;AAEAF,IAAAA,SAAS,CAACF,GAAV,CAAeK,IAAD,IAAU;AACtB,UAAIC,KAAK,GAAG,KAAZ;;AACA,UAAIb,KAAK,CAACc,WAAN,OAAwBF,IAAI,CAACE,WAAL,EAA5B,EAAgD;AAC9CD,QAAAA,KAAK,GAAG,IAAR;AACAE,QAAAA,OAAO,CAACC,GAAR,CAAY,oCAAZ;AACA,4BACE;AAAA,qBACGD,OAAO,CAACC,GAAR,EADH,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHF,eAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAJF,eAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBALF;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF;AASD;;AACD,UAAIH,KAAK,KAAK,KAAd,EAAqB;AACnB,4BACE;AAAK,UAAA,KAAK,EAAE;AAAEI,YAAAA,KAAK,EAAE;AAAT,WAAZ;AAAA,iCACE;AACE,YAAA,KAAK,EAAE;AACLA,cAAAA,KAAK,EAAE,OADF;AAELC,cAAAA,UAAU,EAAE,aAFP;AAGLC,cAAAA,SAAS,EAAE;AAHN,aADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBADF;AAaD,OA7BqB,CA8BtB;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACD,KA3DD;AA4DD,GA/DiB,CAAlB;AAiEA,sBACE;AAAA,eACGJ,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6Bd,WAA7B,CADH,EAEGI,SAFH;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAMD,CAxFD;;GAAMR,U;;KAAAA,U;AA0FN,eAAeA,UAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\n// import { useLocation } from \"react-router-dom\";\r\n\r\nconst SearchPage = (props) => {\r\n  const [query, setQuery] = useState(\"\");\r\n  const [weaponsData, setWeaponsData] = useState([]);\r\n\r\n  useEffect(() => {\r\n    setQuery(props.searchData);\r\n    setWeaponsData(props.fullData);\r\n  }, [props]);\r\n\r\n  // 1st Run a map through my fullData.\r\n  // 2nd split each element\r\n  // 3rd for Each Element.name, run a map and make Each Item\r\n  // if item === query\r\n  // 4th found = true\r\n  // if found === true, return <h1> Found! </h1>\r\n  // else return <h1> Not Found! </h1>\r\n\r\n  const runSearch = weaponsData.map((element) => {\r\n    const splitName = element.name.split(\" \");\r\n\r\n    splitName.map((item) => {\r\n      let found = false;\r\n      if (query.toLowerCase() === item.toLowerCase()) {\r\n        found = true;\r\n        console.log(\"I found something 1111111111111111\");\r\n        return (\r\n          <div>\r\n            {console.log()}\r\n            <h1>ITEM FOUND!!!!!!!!!!!!!!!!!!!</h1>\r\n            <h1>ITEM FOUND!!!!!!!!!!!!!!!!!!!</h1>\r\n            <h1>ITEM FOUND!!!!!!!!!!!!!!!!!!!</h1>\r\n            <h1>ITEM FOUND!!!!!!!!!!!!!!!!!!!</h1>\r\n          </div>\r\n        );\r\n      }\r\n      if (found === false) {\r\n        return (\r\n          <div style={{ color: \"white\" }}>\r\n            <h1\r\n              style={{\r\n                color: \"white\",\r\n                fontFamily: \"MyFirstFont\",\r\n                textAlign: \"center\",\r\n              }}\r\n            >\r\n              No such Item in Database\r\n            </h1>\r\n          </div>\r\n        );\r\n      }\r\n      // if (found === true) {\r\n      //   return (\r\n      //     <div className=\"individualCards\">\r\n      //       {console.log(\"item Found!\", query)}\r\n      //       <h1>{element.name}</h1>\r\n\r\n      //       <section className=\"image-container\">\r\n      //         <img className=\"card-images\" src={element.url1} alt=\"\"></img>\r\n      //         <img className=\"card-images\" src={element.url2} alt=\"\"></img>\r\n      //       </section>\r\n      //       <ul className=\"list\">\r\n      //         <li>{element.cost} Galactic Credits</li>\r\n      //         <li>Weight: Approximately {element.weight} kg</li>\r\n      //         <li style={{ fontWeight: \"bold\" }}>{element.manufacturer}</li>\r\n      //         <br />\r\n      //         <li>{element.short}</li>\r\n      //       </ul>\r\n      //       <br />\r\n      //       <div className=\"button-div\">\r\n      //         <button\r\n      //           className=\"purchase-button\"\r\n      //           onClick={() => props.addToCart(element)}\r\n      //         >\r\n      //           ADD TO CART\r\n      //         </button>\r\n      //       </div>\r\n      //     </div>\r\n      //   );\r\n      // }\r\n    });\r\n  });\r\n\r\n  return (\r\n    <div>\r\n      {console.log(\"weaponsData: \", weaponsData)}\r\n      {runSearch}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearchPage;\r\n"]},"metadata":{},"sourceType":"module"}