{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Thefallen123\\\\Desktop\\\\Github Desktop\\\\Projects\\\\Project-2\\\\src\\\\pages\\\\SearchPage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\"; // import { useLocation } from \"react-router-dom\";\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SearchPage = props => {\n  _s();\n\n  const [query, setQuery] = useState(\"\");\n  const [weaponsData, setWeaponsData] = useState([]);\n  useEffect(() => {\n    setQuery(props.searchData);\n    setWeaponsData(props.fullData);\n  }, [props]); // 1st Run a map through my fullData.\n  // 2nd split each element\n  // 3rd for Each Element.name, run a map and make Each Item\n  // if item === query\n  // 4th found = true\n  // if found === true, return <h1> Found! </h1>\n  // else return <h1> Not Found! </h1>\n\n  const runSearch = weaponsData.map(element => {\n    const splitName = element.name.split(\" \");\n    let found = false;\n    splitName.map(item => {\n      console.log(\"item\", item);\n\n      if (query.toLowerCase() === item.toLowerCase()) {\n        found = true;\n      }\n\n      if (query !== item) {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            color: \"white\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            style: {\n              color: \"white\",\n              fontFamily: \"MyFirstFont\",\n              textAlign: \"center\"\n            },\n            children: \"No such Item in Database\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 13\n          }, this), console.log(\"item not Found!\", query)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 11\n        }, this);\n      }\n\n      if (found === true) {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"individualCards\",\n          children: [console.log(\"item Found!\", query), /*#__PURE__*/_jsxDEV(\"h1\", {\n            children: element.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n            className: \"image-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              className: \"card-images\",\n              src: element.url1,\n              alt: \"\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n              className: \"card-images\",\n              src: element.url2,\n              alt: \"\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            className: \"list\",\n            children: [/*#__PURE__*/_jsxDEV(\"li\", {\n              children: [element.cost, \" Galactic Credits\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: [\"Weight: Approximately \", element.weight, \" kg\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              style: {\n                fontWeight: \"bold\"\n              },\n              children: element.manufacturer\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: element.short\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"button-div\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"purchase-button\",\n              onClick: () => props.addToCart(element),\n              children: \"ADD TO CART\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this);\n      }\n    });\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [console.log(\"weaponsData: \", weaponsData), runSearch]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SearchPage, \"Zl83OLUpZ71Mz71ZFdqr20hvLak=\");\n\n_c = SearchPage;\nexport default SearchPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"SearchPage\");","map":{"version":3,"sources":["C:/Users/Thefallen123/Desktop/Github Desktop/Projects/Project-2/src/pages/SearchPage.js"],"names":["React","useEffect","useState","SearchPage","props","query","setQuery","weaponsData","setWeaponsData","searchData","fullData","runSearch","map","element","splitName","name","split","found","item","console","log","toLowerCase","color","fontFamily","textAlign","url1","url2","cost","weight","fontWeight","manufacturer","short","addToCart"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C,C,CACA;;;;AAEA,MAAMC,UAAU,GAAIC,KAAD,IAAW;AAAA;;AAC5B,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBJ,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACK,WAAD,EAAcC,cAAd,IAAgCN,QAAQ,CAAC,EAAD,CAA9C;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACdK,IAAAA,QAAQ,CAACF,KAAK,CAACK,UAAP,CAAR;AACAD,IAAAA,cAAc,CAACJ,KAAK,CAACM,QAAP,CAAd;AACD,GAHQ,EAGN,CAACN,KAAD,CAHM,CAAT,CAJ4B,CAS5B;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,QAAMO,SAAS,GAAGJ,WAAW,CAACK,GAAZ,CAAiBC,OAAD,IAAa;AAC7C,UAAMC,SAAS,GAAGD,OAAO,CAACE,IAAR,CAAaC,KAAb,CAAmB,GAAnB,CAAlB;AACA,QAAIC,KAAK,GAAG,KAAZ;AACAH,IAAAA,SAAS,CAACF,GAAV,CAAeM,IAAD,IAAU;AACtBC,MAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAoBF,IAApB;;AACA,UAAIb,KAAK,CAACgB,WAAN,OAAwBH,IAAI,CAACG,WAAL,EAA5B,EAAgD;AAC9CJ,QAAAA,KAAK,GAAG,IAAR;AACD;;AACD,UAAIZ,KAAK,KAAKa,IAAd,EAAoB;AAClB,4BACE;AAAK,UAAA,KAAK,EAAE;AAAEI,YAAAA,KAAK,EAAE;AAAT,WAAZ;AAAA,kCACE;AACE,YAAA,KAAK,EAAE;AACLA,cAAAA,KAAK,EAAE,OADF;AAELC,cAAAA,UAAU,EAAE,aAFP;AAGLC,cAAAA,SAAS,EAAE;AAHN,aADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,EAUGL,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA+Bf,KAA/B,CAVH;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF;AAcD;;AACD,UAAIY,KAAK,KAAK,IAAd,EAAoB;AAClB,4BACE;AAAK,UAAA,SAAS,EAAC,iBAAf;AAAA,qBACGE,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2Bf,KAA3B,CADH,eAEE;AAAA,sBAAKQ,OAAO,CAACE;AAAb;AAAA;AAAA;AAAA;AAAA,kBAFF,eAIE;AAAS,YAAA,SAAS,EAAC,iBAAnB;AAAA,oCACE;AAAK,cAAA,SAAS,EAAC,aAAf;AAA6B,cAAA,GAAG,EAAEF,OAAO,CAACY,IAA1C;AAAgD,cAAA,GAAG,EAAC;AAApD;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE;AAAK,cAAA,SAAS,EAAC,aAAf;AAA6B,cAAA,GAAG,EAAEZ,OAAO,CAACa,IAA1C;AAAgD,cAAA,GAAG,EAAC;AAApD;AAAA;AAAA;AAAA;AAAA,oBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,kBAJF,eAQE;AAAI,YAAA,SAAS,EAAC,MAAd;AAAA,oCACE;AAAA,yBAAKb,OAAO,CAACc,IAAb;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE;AAAA,mDAA2Bd,OAAO,CAACe,MAAnC;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFF,eAGE;AAAI,cAAA,KAAK,EAAE;AAAEC,gBAAAA,UAAU,EAAE;AAAd,eAAX;AAAA,wBAAoChB,OAAO,CAACiB;AAA5C;AAAA;AAAA;AAAA;AAAA,oBAHF,eAIE;AAAA;AAAA;AAAA;AAAA,oBAJF,eAKE;AAAA,wBAAKjB,OAAO,CAACkB;AAAb;AAAA;AAAA;AAAA;AAAA,oBALF;AAAA;AAAA;AAAA;AAAA;AAAA,kBARF,eAeE;AAAA;AAAA;AAAA;AAAA,kBAfF,eAgBE;AAAK,YAAA,SAAS,EAAC,YAAf;AAAA,mCACE;AACE,cAAA,SAAS,EAAC,iBADZ;AAEE,cAAA,OAAO,EAAE,MAAM3B,KAAK,CAAC4B,SAAN,CAAgBnB,OAAhB,CAFjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBAhBF;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF;AA2BD;AACF,KAlDD;AAmDD,GAtDiB,CAAlB;AAwDA,sBACE;AAAA,eACGM,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6Bb,WAA7B,CADH,EAEGI,SAFH;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAMD,CA/ED;;GAAMR,U;;KAAAA,U;AAiFN,eAAeA,UAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\n// import { useLocation } from \"react-router-dom\";\r\n\r\nconst SearchPage = (props) => {\r\n  const [query, setQuery] = useState(\"\");\r\n  const [weaponsData, setWeaponsData] = useState([]);\r\n\r\n  useEffect(() => {\r\n    setQuery(props.searchData);\r\n    setWeaponsData(props.fullData);\r\n  }, [props]);\r\n\r\n  // 1st Run a map through my fullData.\r\n  // 2nd split each element\r\n  // 3rd for Each Element.name, run a map and make Each Item\r\n  // if item === query\r\n  // 4th found = true\r\n  // if found === true, return <h1> Found! </h1>\r\n  // else return <h1> Not Found! </h1>\r\n\r\n  const runSearch = weaponsData.map((element) => {\r\n    const splitName = element.name.split(\" \");\r\n    let found = false;\r\n    splitName.map((item) => {\r\n      console.log(\"item\", item);\r\n      if (query.toLowerCase() === item.toLowerCase()) {\r\n        found = true;\r\n      }\r\n      if (query !== item) {\r\n        return (\r\n          <div style={{ color: \"white\" }}>\r\n            <h1\r\n              style={{\r\n                color: \"white\",\r\n                fontFamily: \"MyFirstFont\",\r\n                textAlign: \"center\",\r\n              }}\r\n            >\r\n              No such Item in Database\r\n            </h1>\r\n            {console.log(\"item not Found!\", query)}\r\n          </div>\r\n        );\r\n      }\r\n      if (found === true) {\r\n        return (\r\n          <div className=\"individualCards\">\r\n            {console.log(\"item Found!\", query)}\r\n            <h1>{element.name}</h1>\r\n\r\n            <section className=\"image-container\">\r\n              <img className=\"card-images\" src={element.url1} alt=\"\"></img>\r\n              <img className=\"card-images\" src={element.url2} alt=\"\"></img>\r\n            </section>\r\n            <ul className=\"list\">\r\n              <li>{element.cost} Galactic Credits</li>\r\n              <li>Weight: Approximately {element.weight} kg</li>\r\n              <li style={{ fontWeight: \"bold\" }}>{element.manufacturer}</li>\r\n              <br />\r\n              <li>{element.short}</li>\r\n            </ul>\r\n            <br />\r\n            <div className=\"button-div\">\r\n              <button\r\n                className=\"purchase-button\"\r\n                onClick={() => props.addToCart(element)}\r\n              >\r\n                ADD TO CART\r\n              </button>\r\n            </div>\r\n          </div>\r\n        );\r\n      }\r\n    });\r\n  });\r\n\r\n  return (\r\n    <div>\r\n      {console.log(\"weaponsData: \", weaponsData)}\r\n      {runSearch}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearchPage;\r\n"]},"metadata":{},"sourceType":"module"}